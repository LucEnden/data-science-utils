name: Create Minor or Patch Release

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - 'docs/**'
  workflow_dispatch:
    inputs:
      breaking-changes:
        description: 'Reason'
        required: true
        default: 'Testing'
        type: string

env:
    VERSION_BUMP: patch

jobs:
  create-intermediate-release:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - uses: actions/checkout@v2
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v42.0.2
        with:
          files: |
            .dsutils/**
      - name: Run step if any of the listed files above change
        if: steps.changed-files.outputs.added_files_count > 0 || steps.changed-files.outputs.deleted_files_count > 0 || steps.changed-files.outputs.renamed_files_count > 0 || steps.changed-files.outputs.type_changed_files_count > 0
        run: |
            echo "VERSION_BUMP=minor" >> "$GITHUB_ENV"
      - name: Echo the bump level
        id: echo-bump-level
        run: |
          echo "Version bump: ${{ env.VERSION_BUMP }}"    
        # Get the latest version tag
      - uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
      - uses: actions-ecosystem/action-bump-semver@v1
        id: bump-semver
        with:
          current_version: ${{ steps.get-latest-tag.outputs.tag }}
          level: "${{ env.VERSION_BUMP }}"
      - uses: actions-ecosystem/action-push-tag@v1
        with:
          tag: ${{ steps.bump-semver.outputs.new_version }}
          message: "New version: ${{ steps.bump-semver.outputs.new_version }}"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.bump-semver.outputs.new_version }}
          release_name: Release ${{ steps.bump-semver.outputs.new_version }}
          body: ${{ github.event.head_commit.message }}
          draft: false
          prerelease: true