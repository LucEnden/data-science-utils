name: Create Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
        # Checkout the repository
      - uses: actions/checkout@v2
        # Get the latest versoin tag
      - uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
        # Bump the version
        # We detirmine the level of the bump based on the following:
          # If the push contains changes to existing files, we bump the patch version
          # If the push contains new files, we bump the minor version
          # If the push contains a manually added tag (regardless of its contents), we bump the major version
      - name: Determine bump level
        id: determine-bump-level
        run: |
          if git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | grep -q '^[^/]*$'; then
            echo "::set-output name=level::patch"
          elif git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | grep -q '/'; then
            echo "::set-output name=level::minor"
          else
            echo "::set-output name=level::major"
          fi
      - name: Echo the bump level
        id: echo-bump-level
        run: |
          # Echo the bump level to the console
          echo "Bump level: ${{ steps.determine-bump-level.outputs.level }}"
      #- uses: actions-ecosystem/action-bump-semver@v1
      #  id: bump-semver
      #  with:
      #    current_version: ${{ steps.get-latest-tag.outputs.tag }}
      #    level: minor
      #- uses: actions-ecosystem/action-push-tag@v1
      #  with:
      #    tag: ${{ steps.bump-semver.outputs.new_version }}
      #    message: '${{ steps.bump-semver.outputs.new_version }}: PR #${{ github.event.pull_request.number }} ${{ github.event.pull_request.title }}'